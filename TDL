# Project: two

TODO

    Work on the releases script

    Move the @all alias to @@
        also add @available and alias it to @a
        also make -U imply //@@ like -l does

    Test install.sh

    Improve release.sh

WIP

    Work on mdbook docs
        Sketch out what each chapter should cover

    Complete maint functionality
        add m-downgrade
        improve error handling

    Expand the main & xorg repos

DONEISH

    Add force pruning

    Rename comms/log.rs to comms/out.rs for clarity

    Figure out how to make the message configs have the full escape code in the config for clarity
        Done
        I had to use \u00 instead of \x

    Do hash-checks in house instead of relying on openssl

    Make cleaning hesitant to remove manifests
        Also went ahead and refactored the relevant functions

    Investigate a potential bug where -fbi builds twice

    Attempt to update instead of installing if -i is passed, the package is already installed, and it's outdated
        Im like 80% sure i did this cus the codes there but idr if i fully implemented it LOL
        Update: it feels like it mostly works, so im up to 90% sure, but ima have to test this some more <<< TODO: Verify

    Have the execution logic as a PM method
        Also pass args to it
        This is to address the `2 -bi dependency package` issue
        Iterate over each package, checking the flags

    Add a way to specify repo when dealing with sets
        I'm thinking assume all repos unless repo/ is specified (for special sets)
            (I ended up just assuming the highest priority repo for special sets, opting for //@special instead)
        otherwise resolve ambiguity

        probably not necessary yet

    Use more nf icons

    Make the downloads actually happen at the start

    Add sets for installed, outdated, etc

    Migrate from lazy_static to once_cell for everything
        Used std::sync::LazyLock instead

    Allow viewing package changelogs with -H

    Make -U show the repo as well as the package name
        cus
            main/kernel
            tox/kernel

    // fucking hell i was tired :sob:
    Fix the fucking the thing the parallel dowlnoads fuck im tired
        make the downloads happen at the start but not like in parallel because every fucking crate author is allergic to writing good documentation with examples of how to use the fucking library
        also it would make logging a lot simpler

    Fix upstream version commands for xorg/

    Rayon support for -U is badly needed

    Update to ureq 3

    Fix upstream version commands for main/

    Move .uv.toml data back into info.lock and BUILD, simplifying stuff
    Add upstream version checking

    Add per package history tracking
        Add autogenerated via scripts changelogs for package builds

    Added m-move

    Updated m-*

    Figure out how to make documentation not show in --help as it currently does

    Add --provides (-P) to see what package provides a certain file via searching manifests

    Add more (source code) documentation

    Use anyhow

    Add log4rs or tracing integration (ideally only log to a file)

    Make -l list all packages for all repos

    Use Arc instead of Vec
        Maybe branch for this

    Add a master package log

    Add logs
        Master log in /var/log/2/master.log
        Per-package build logs in /usr/ports/<repo>/<package>/.logs/build.log

    Add syncing

    Add repo addition

    Remove exclusions from the config.toml

    Add repo priority and auto_ambiguity

    Fix sourceless package support
        Done; needs testing though

    Make file size update dynamically for unknown sizes

    make the scripts recognize $EDITOR

    Check if the necessary dot dirs exist for the passed package, and create them
        Would ensure cleaning works properly on first builds

    Remove all references to /code

    Fix bugs in install.sh
        Rustup toolchain handling
        no op for the currently nonexistent wget command
        fix /bin/2

    Check whether another package is installed before checking against its manifest when removing a specific package

    Fix set ambiguity

    Update the README

    Add an install.sh

    Migrate to using $D

    Add an option to exclude paths from the extraction

    actually implement pruning

    check source hashes during the setup stage

    Migrate build to /usr/ports/<repo>/<package>/.build

    Migrate sources to /usr/ports/<repo>/<package>/.sources

    Prefer ambiguity checks over verbose repo specification

    Add listing functionality

    Test package installation

    Add manifest checking and logic for package removal

    Add source fetching

DROPPED

    Make build.log only include the build logs
        Instead just used pkg.log

    Add -! to reverse the behavior of (some) flags
        ~~For instance, -P shows what packages provide a file, but -!P might show what files a package provides~~
        Would be unintuitive and overly complex

IDEAS

    Build time tracking
        https://pad.riseup.net/p/buildtimetracking-keep

    BUILD instruction guessing
        https://pad.riseup.net/p/buildinstructionguessing-keep

    Add a file for enabled repos
        This would mean not having to delete source tarballs, logs, and data when "removing" a repo

    Introduce /etc/2/sysconfig.toml
        Centralized location for configuring certain system-specific options
        Would make the installation of certain packages just a little less painful, but may not be worth it idk

    Consider using cfg_if

    Consider writing to a .part to avoid the possibility of incomplete tarballs because of an interrupted download

    Rayon everywhere
        There's a fair bit of overhead with doing this
        Async might be the play but I lowkey hate async

    Look into using --dereference with tar

    Dependencies support with a flag '-d' or similar
        Implies dependency resolution as well

    Make /usr/ports remappable
        Might not even be worth doing tbh
        Having it in a hardcoded spot is probably for the best

    Check hashes for dist installs as well
        Would marginally increase security

    Add git as a supported source format
        syntax: source variable starts with git+
        repo is cloned to /usr/ports/<repo>/<package>/.sources/git+name
        if it exists, the repo is pulled instead
        tags are checked out here
        then, the build is done in .build as usual

    Do the zstd compression in-house
        would maybe allow for a progress bar :pray:

ROADMAP

    Features for 2-0.1.0:
        [-] install script (just needs testing now)
        [*] fair maint functionality
        [-] solid documentation with mdbook (wip)

    Features for 2-0.2.0:
        dependency support
        .part downloads

    Features for 2-0.3.0:
        package summaries
        repo enabling/disabling
        build time tracking
