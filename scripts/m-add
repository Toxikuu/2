#!/usr/bin/env bash
# m-add (maintainer add) adds a package

source /usr/share/2/bin/f-core || exit 211
pushd . > /dev/null

usage() {
  echo 'Usage: m-add (<repo>/)<package>=<version>' >&2
  exit 2 # syntax exit code
}

EDITOR="${EDITOR:-nvim}"

[ "$#" -ne 1 ] && usage

[[ "$1" == *#*   ]] && usage # options are not supported
[[ "$1" == */*/* ]] && usage
[[ "$1" == *=*=* ]] && usage
[[ "$1" == *=*   ]] || usage # version must be specified

# parse repo name if passed
if [[ "$1" == */* ]]; then
  REPO="${1%%/*}"
  NAME="${1#*/}"
else
  NAME="$1"
  REPO="${REPO:-main}"
fi

VERS="${NAME#*=}"
NAME="${NAME%%=*}"

echo
echo " ### VARIABLES ### "
echo "REPO: $REPO"
echo "NAME: $NAME"
echo "VERS: $VERS"
echo " ### VARIABLES ### "
echo

read -p "Press enter to continue..."

[ -e /usr/ports/"$REPO" ] || die "Nonexistent repo: $REPO"

cd "/usr/ports/$REPO"
mkdir -pv "$NAME" && cd "$NAME"

[ -e BUILD ] && die 'This package already exists!'

mkdir -pv .dist .data .sources .build .logs

cat > BUILD << EOF
NAME="$NAME"
VERS="$VERS"
DESC=""
UPST=""

SOURCE=""
EXTRA=()

2b() {

}
EOF

"$EDITOR" BUILD

/usr/share/2/bin/m-gen "$REPO/$NAME"

msg "Committing changes..."

MSG="Added $NAME=$VERS"

git add .
COMMIT=$(git commit -qm "$MSG" && git rev-parse HEAD)

TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S")
echo -e "Changelog for $NAME:\n" > CHANGELOG
echo "[$COMMIT] [$TIMESTAMP] | $MSG" >> CHANGELOG

git add CHANGELOG
git commit -qm "Logged $COMMIT"

msg "Done!"

popd > /dev/null
