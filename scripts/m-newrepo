#!/usr/bin/env bash
# m-newrepo (maintainer newrepo) adds a new repo
#
# to use this, you'll need to create the remote repository first
# the remote repo name format is: '2-<repo>'
# and the local repo would just be called <repo>

source /usr/share/2/bin/f-core
pushd . > /dev/null

usage() {
  echo 'Usage: m-newrepo <repo> (<remote>)' >&2
  # optionally also $LICENSE
  exit 2 # syntax exit code
}

EDITOR="${EDITOR:-nvim}"

GITUSER=${GITUSER:-$(git config user.name)}
GITEMAIL=${GITEMAIL:-$(git config user.email)}

[ -z "$GITUSER" ]   && die 'Please set $GITUSER'
[ -z "$GITEMAIL" ]  && die 'Please set $GITEMAIL'

REPO="${1:-$REPO}"
[ -z "$REPO" ]    && usage
REMOTE="${2:-${REMOTE:-"git@github.com:$GITUSER/2-$REPO.git"}}"
[ -z "$REMOTE" ]  && usage

echo
echo " ### VARIABLES ### "
echo "REPO: $REPO"
echo "REMOTE: $REMOTE"
echo " ### VARIABLES ### "
echo

read -p "Press enter to continue..."

[ -e /usr/ports/"$REPO" ] && die 'This repo already exists!'

mkdir -pv "/usr/ports/$REPO"
cd "/usr/ports/$REPO"
msg "Initializing repo..."
git init -q

cat > .gitignore << EOF
*/.*
EOF

cat > README.md << EOF
# $REPO

## INFO
This is a [2](https://github.com/Toxikuu/2) package repository
EOF
"$EDITOR" README.md

# use gpl-3.0 by default, but allow overrides with the LICENSE env var
curl -o LICENSE "${LICENSE:-https://www.gnu.org/licenses/gpl-3.0.txt}"

git status -s
read -p "Press enter to continue..."

git config user.name "$GITUSER"
git config user.email "$GITEMAIL"

# commit
msg "Committing changes..."

git add .
git commit -qm "Initialized '$REPO'"
git remote add origin "$REMOTE"
git branch -M master

msg "The remote origin has been set to '$REMOTE'"
# this is not done automatically in case the user doesn't have rw access properly set up
msg "You should now push the changes:"
echo "git push -u origin master"

msg "Done!"

popd > /dev/null
