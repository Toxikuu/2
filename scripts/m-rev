#!/usr/bin/env bash
# m-rev (maintainer revise) revises a package

source /usr/share/2/bin/e-core || exit 211
pushd . > /dev/null

usage() {
  echo -e "\x1b[31;1mUsage: m-rev (<repo>/)<package>\x1b[0m" >&2
  # you can specify version but it isn't used
  exit 2 # syntax exit code
}

EDITOR="${EDITOR:-nvim}"

[ "$#" -ne 1 ] && usage

[[ "$1" == */*/* ]] && usage
[[ "$1" == *=*=* ]] && usage

# parse repo name if passed
if [[ "$1" == */* ]]; then
  REPO="${1%%/*}"
  NAME="${1#*/}"
else
  NAME="$1"
  REPO="${REPO:-main}"
fi

NAME="${NAME%%=*}"

echo
echo " ### VARIABLES ### "
echo "REPO: $REPO"
echo "NAME: $NAME"
echo " ### VARIABLES ### "
echo

read -p "Press enter to continue..." 

cd "/usr/ports/$REPO/$NAME"

[ -e BUILD ] || { echo 'This package does not exist!' ; exit 1 ;}

# regenerate if locked variables are changed
mkdir -pv /tmp/2/m-diffs

source BUILD
declare -p > /tmp/2/m-diffs/pre

sed -i '/^#d/d' BUILD
"$EDITOR" BUILD

source BUILD
declare -p > /tmp/2/m-diffs/post

changes=$(diff /tmp/2/m-diffs/p{re,ost} | grep -E 'NAME|VERS|DESC|UPST|SOURCE|EXTRA' | wc -l)
[ "$changes" -gt 0 ] && /usr/share/2/bin/m-gen "$REPO/$NAME"

# check for a commit description
LINE=$(tail -n1 BUILD)
if [[ "$LINE" =~ ^\#d ]]; then
  CD="${LINE#*#d }"
fi

MSG="Revised $NAME"

# commit
msg "Committing changes..."

git add .
COMMIT=$(git commit -qm "$MSG" -m "$CD" && git rev-parse HEAD)

TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S")
if [ -z "$CD" ]; then
  echo "[$COMMIT] [$TIMESTAMP] | $MSG" >> CHANGELOG
else
  echo "[$COMMIT] [$TIMESTAMP] | $MSG: $CD" >> CHANGELOG
fi

git add CHANGELOG
git commit -qm "Logged $COMMIT"

msg "Done!"

popd > /dev/null
