#!/usr/bin/env bash
# m-upd (maintainer update) updates a package

source /usr/share/2/bin/f-core || exit 211
pushd . > /dev/null

usage() {
  echo "\x1b[31;1mUsage: m-upd (<repo>/)<package>=<version>\x1b[0m" >&2
  echo "\x1b[31;1mThe version specified becomes the new version\x1b[0m" >&2
  exit 2 # syntax exit code
}

EDITOR="${EDITOR:-nvim}"

[ "$#" -ne 1 ] && usage

[[ "$1" == *#*   ]] && usage
[[ "$1" == */*/* ]] && usage
[[ "$1" == *=*=* ]] && usage
[[ "$1" == *=*   ]] || usage # version must be specified

# parse repo name if passed
if [[ "$1" == */* ]]; then
  REPO="${1%%/*}"
  NAME="${1#*/}"
else
  NAME="$1"
  REPO="${REPO:-main}"
fi

VERS="${NAME#*=}"
NAME="${NAME%%=*}"

echo
echo " ### VARIABLES ### "
echo "REPO: $REPO"
echo "NAME: $NAME"
echo "VERS: $VERS"
echo " ### VARIABLES ### "
echo

read -p "Press enter to continue..." 

[ -e /usr/ports/"$REPO" ] || die "Nonexistent repo: $REPO"

cd "/usr/ports/$REPO/$NAME"

NEWVERS="$VERS"
source BUILD
OLDVERS="$VERS"

sed -i "0,/^VERS=/s/^VERS=.*/VERS=\"$NEWVERS\"/" BUILD
"$EDITOR" BUILD
source BUILD # in case $VERS is changed while in the editor

/usr/share/2/bin/m-gen "$REPO/$NAME"

msg "Committing changes..."

MSG="Updated $NAME: $OLDVERS -> $VERS"

git add .
COMMIT=$(git commit -qm "$MSG" && git rev-parse HEAD)

TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S")
echo "[$COMMIT] [$TIMESTAMP] | $MSG" >> CHANGELOG

git add CHANGELOG
git commit -qm "Logged $COMMIT"

msg "Done!"

popd > /dev/null
